{"version":3,"file":"static/js/622.fe2072e7.chunk.js","mappings":"0JAeA,MARA,YAA8E,IAArDA,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,aAC5C,OACE,oBAASF,UAAS,kBAAaA,GAAaG,MAAOD,EAAnD,UACE,gBAAKF,UAAU,MAAf,SAAsBC,KAG3B,C,uJCFKG,EAA2B,yCAAG,kHAETC,EAAAA,EAAAA,IACrB,2CAH8B,cAE1BC,EAF0B,yBAKzBA,GALyB,yDAOzB,KAAeC,SAPU,yDAAH,qDAW3BC,EAAmB,yCAAG,kHAEDH,EAAAA,EAAAA,IACrB,kCAHsB,cAElBC,EAFkB,yBAKjBA,GALiB,yDAOjB,KAAeC,SAPE,yDAAH,qDAWnBE,EAAkB,yCAAG,kHAEAJ,EAAAA,EAAAA,IACrB,sBAHqB,cAEjBC,EAFiB,yBAKhBA,GALgB,yDAOhB,KAAeC,SAPC,yDAAH,qDAWlBG,EAAiB,yCAAG,kHAECL,EAAAA,EAAAA,IACrB,oBAHoB,cAEhBC,EAFgB,yBAKfA,GALe,yDAOf,KAAeC,SAPA,yDAAH,qD,6EC4BvB,MA7DA,WACE,OD0DOI,EAAAA,EAAAA,UAAS,yBAA0BH,GC1DlCI,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,MAElC,GAAIH,EACF,OAAO,uCAGT,GAAIC,EACF,OACE,0BACGE,aAAiBC,OAAQ,wBAAKD,EAAMR,UAAgB,qBAK3D,IAAMU,EAAO,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAMA,KAAKI,QAG3B,OAFAC,QAAQC,IAAIH,IAGV,gBAAKjB,UAAU,qDAAf,UACE,iBAAKA,UAAU,aAAf,WACE,gBAAIA,UAAU,GAAd,8BACoB,KAClB,2EAEF,gBAAKA,UAAU,mBAAf,UACE,gBAAKA,UAAU,MAAf,UACE,SAACqB,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAQ,EAAOC,UAAU,MAA3D,UACE,UAACC,EAAA,EAAD,CACEH,MAAO,IACPI,OAAQ,IACRZ,KAAMG,EACNU,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARZ,WAWE,SAACC,EAAA,EAAD,CACEC,YAAa,EACbC,YAAY,EACZC,UAAU,EACVC,iBAAkB,CAAC,GAAI,GAAI,IAAK,IAAK,QAEvC,SAACC,EAAA,EAAD,CAAOC,MAAM,KACb,SAACC,EAAA,EAAD,CAAOD,MAAM,KAGb,SAACE,EAAA,EAAD,CAAQC,SAAS,YACjB,SAACC,EAAA,EAAD,CAAMC,KAAK,WAAWC,QAAQ,UAAUC,OAAO,aAC/C,SAACH,EAAA,EAAD,CAAMC,KAAK,WAAWC,QAAQ,OAAOC,OAAO,yBAQ3D,E,8BC1DK/B,EAAO,CACX,CACEgC,KAAM,SACNC,KAAM,IACNC,KAAM,MAER,CACEF,KAAM,MACNC,KAAM,IACNC,KAAM,MAER,CACEF,KAAM,MACNC,KAAM,IACNC,KAAM,MAER,CACEF,KAAM,MACNC,KAAM,KACNC,KAAM,MAER,CACEF,KAAM,MACNC,KAAM,KACNC,KAAM,MAER,CACEF,KAAM,MACNC,KAAM,KACNC,KAAM,MAER,CACEF,KAAM,MACNC,KAAM,KACNC,KAAM,OAmCV,EA/B0B,WACxB,OACE,gBAAKhD,UAAU,sCAAf,UACE,SAACqB,EAAA,EAAD,CAAqBC,MAAM,OAAOI,OAAO,OAAzC,UACE,UAACuB,EAAA,EAAD,CACE3B,MAAO,IACPI,OAAQ,IACRZ,KAAMA,EACNa,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,KAAM,EACNC,OAAQ,GARZ,WAWE,SAACC,EAAA,EAAD,CAAekB,gBAAgB,SAC/B,SAACb,EAAA,EAAD,CAAOO,QAAQ,UACf,SAACL,EAAA,EAAD,CAAOD,MAAM,KACb,SAACa,EAAA,EAAD,KACA,SAACC,EAAA,EAAD,CACET,KAAK,WACLC,QAAQ,OACRC,OAAO,UACPQ,KAAK,aAEP,SAACD,EAAA,EAAD,CAAMT,KAAK,WAAWC,QAAQ,OAAOC,OAAO,UAAUQ,KAAK,eAKpE,E,mBCfD,EA5DkB,WAChB,OHoEO1C,EAAAA,EAAAA,UAAS,kBAAmBF,GGpE3BG,EAAR,EAAQA,UAAiB0C,EAAzB,EAAmBxC,KAAeD,EAAlC,EAAkCA,QAASE,EAA3C,EAA2CA,MAI3C,OAAIH,GACK,uCAGLC,GAEA,0BACGE,aAAiBC,OAAQ,wBAAKD,EAAMR,UAAgB,sBAMzD,+BAEE,iBAAKP,UAAU,gCAAf,WACE,wCACA,gBAAKA,UAAU,YAAf,UAEE,gBAAKA,UAAU,OAAf,UACE,gBAAKA,UAAU,YAAf,UACE,iBAAKA,UAAU,WAAf,iBAEIsD,QAFJ,IAEIA,OAFJ,EAEIA,EAASxC,KAAKI,QAAQqC,KAAI,YAAoC,IAAlCR,EAAiC,EAAjCA,KAAMS,EAA2B,EAA3BA,YAChC,OACE,iBAAgBxD,UAAU,uBAA1B,WACE,gBAAKA,UAAU,oBACf,cAAGA,UAAU,kEACb,iBAAKA,UAAU,mBAAf,UACGwD,EAAYC,UAAU,EAAE,IAAM,OAC/B,iBAAMzD,UAAU,aAAhB,SACC0D,IAAOC,OAAOZ,IAAOa,QAAQ,QAAQC,iBANhCd,EAWb,KAGH,iBAAK/C,UAAU,uBAAf,WACE,gBAAKA,UAAU,oBACf,cAAGA,UAAU,6DACb,gBAAKA,UAAU,mBAAf,sCAYjB,ECjBD,EA3CmB,WACjB,OJyEOW,EAAAA,EAAAA,UAAS,gBAAiBD,GIzEzBE,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,KAAMD,EAAzB,EAAyBA,QAASE,EAAlC,EAAkCA,MAGlC,OAAIH,GACK,uCAGLC,GAEA,0BACGE,aAAiBC,OAAQ,wBAAKD,EAAMR,UAAgB,sBAKzD,iBAAKP,UAAU,+BAAf,WACE,sCACA,gBAAKA,UAAU,YAAf,UACE,gBAAKA,UAAU,OAAf,UACE,gBAAKA,UAAU,YAAf,gBAEMc,QAFN,IAEMA,OAFN,EAEMA,EAAMA,KAAKI,QAAQqC,KAAI,YAAoD,IAAlDR,EAAiD,EAAjDA,KAAMS,EAA2C,EAA3CA,YAAaM,EAA8B,EAA9BA,WACxC,OACI,iBAAgB9D,UAAU,oBAA1B,WACA,iBAAKA,UAAU,cAAf,WACE,cAAGA,UAAU,yBACb,kBAAMA,UAAU,kBAAhB,WACE,gBAAKA,UAAU,eAAf,SAA+B8D,KAC/B,gBAAK9D,UAAU,sBAAf,SAAsC0D,IAAOC,OAAOZ,IAAOa,QAAQ,QAAQC,mBAG/E,cAAG7D,UAAU,eAAb,SAA6BwD,MARnBT,EAWf,YAOlB,ECxBD,EAhBqB,SAAC,GAAyD,IAAvDgB,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,OAAQtB,EAAiC,EAAjCA,KAC3C,OACE,gBAAK3C,UAAU,aAAf,UACE,iBAAKA,UAAU,sBAAf,WACE,iBAAKA,UAAU,eAAf,WACE,wBAAK+D,KACL,2BAAQC,QAEV,kBAAMhE,UAAU,gBAAhB,WACE,wBAAKiE,KACL,2BAAQtB,WAKjB,ECkFD,EA5F0B,WACxB,IAAQuB,GAAcC,EAAAA,EAAAA,MAAdD,UAER,GNiDOvD,EAAAA,EAAAA,UACL,oCACAP,GMnDMQ,EAAR,EAAQA,UAAiBC,GAAzB,EAAmBC,KAAnB,EAAyBD,SAASE,EAAlC,EAAkCA,MAGlC,OAAIH,GACK,uCAGLC,GAEA,0BACGE,aAAiBC,OAAQ,wBAAKD,EAAMR,UAAgB,sBAMzD,SAAC,EAAA6D,SAAD,WAEE,iBAAMC,GAAG,OAAOrE,UAAU,OAA1B,UACE,UAACsE,EAAA,EAAD,CAAetE,UAAU,gBAAzB,WAEE,gBAAIA,UAAU,aAAd,WACE,SAAC,KAAD,CAAMuE,GAAG,IAAT,UACE,iBAAMvE,UAAU,aAAhB,UACE,cAAGA,UAAU,yBAHnB,YAMYkE,MAGZ,gBAAKlE,UAAU,YAAf,UACE,iBAAKA,UAAU,MAAf,WAEE,iBAAKA,UAAU,+BAAf,WAEE,SAAC,EAAD,CACE+D,MAAM,iBACNC,KAAK,2BACLC,OAAQ,OAKV,SAAC,EAAD,CACEF,MAAM,YACNC,KAAK,kBACLC,OAAQ,GACRtB,KAAK,SAKP,SAAC,EAAD,CACEoB,MAAM,SACNC,KAAK,0BACLC,OAAQ,SAOZ,SAAC,EAAD,UAOJ,SAAC,EAAD,KAIA,gBAAKjE,UAAU,mBAAf,UACE,gBAAKA,UAAU,kBAAf,UACE,iBAAKA,UAAU,MAAf,WACE,SAAC,EAAD,KACA,SAAC,EAAD,iBAWf,C,oCCnGKK,E,MAAgBmE,GAAAA,OAAa,CACjCC,QAHcC,wBAIdC,QAAS,CACP,eAAgB,sBAIpB,K","sources":["components/container/MainContainer.tsx","hook/SensorDetailsAPIservices.tsx","pages/charts/dailyTempChart/TempratureDailyLineChart.jsx","pages/charts/weeklyAvgChart/Weekly_avg_tem_chart.jsx","pages/sensorDetails/systemLog/SystemLog.tsx","pages/sensorDetails/activity/Activities.tsx","pages/sensorDetails/totalReports/TotalReports.tsx","pages/sensorDetails/detailsHome/SensorDetails.tsx","utils/axios.jsx"],"sourcesContent":["import React, { CSSProperties } from \"react\";\r\nimport \"./containerStyle.css\";\r\ntype chilPropsType = {\r\n  children?: React.ReactNode;\r\n  styleAsProps?: CSSProperties;\r\n  className?: string;\r\n};\r\nfunction MainContainer({ className, children, styleAsProps }: chilPropsType) {\r\n  return (\r\n    <section className={`section ${className}`} style={styleAsProps}>\r\n      <div className=\"row\">{children}</div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MainContainer;\r\n","import { useQuery } from \"react-query\";\r\nimport axiosInstance from \"../utils/axios\";\r\nimport { axiosResponseTypes } from \"../types/Types\";\r\n\r\n/**\r\n * --------------- Details Page Routes ----------------------\r\n * http://localhost:5000/details/msg_downtime_alert_wklyAVGTemp\r\n * http://localhost:5000/details/daily_temprature_chart\r\n * http://localhost:5000/details/system_log\r\n * http://localhost:5000/details/activity\r\n */\r\nconst fetchTotalsAndWeeklyAvgTemp = async () => {\r\n  try {\r\n    const response = await axiosInstance.get<axiosResponseTypes, any>(\r\n      \"/details/msg_downtime_alert_wklyAVGTemp\"\r\n    );\r\n    return response;\r\n  } catch (err) {\r\n    return (err as Error).message;\r\n  }\r\n};\r\n\r\nconst fetchDailyChartData = async () => {\r\n  try {\r\n    const response = await axiosInstance.get<axiosResponseTypes, any>(\r\n      \"details/daily_temprature_chart\"\r\n    );\r\n    return response;\r\n  } catch (err) {\r\n    return (err as Error).message;\r\n  }\r\n};\r\n\r\nconst fetchSystemLogData = async () => {\r\n  try {\r\n    const response = await axiosInstance.get<axiosResponseTypes, any>(\r\n      \"details/system_log\"\r\n    );\r\n    return response;\r\n  } catch (err) {\r\n    return (err as Error).message;\r\n  }\r\n};\r\n\r\nconst fetchActivityData = async () => {\r\n  try {\r\n    const response = await axiosInstance.get<axiosResponseTypes, any>(\r\n      \"details/activity\"\r\n    );\r\n    return response;\r\n  } catch (err) {\r\n    return (err as Error).message;\r\n  }\r\n};\r\n\r\n// const fetchDailyChartData = async (pageNumber: number, limitPerPage: number) => {\r\n//   const response = await axios.get(\r\n//     `http://localhost:5000/sensors?page=${pageNumber}&limit=${limitPerPage}`\r\n//   );\r\n//   return response;\r\n// };\r\n\r\nexport const useTotalsAndWeeklyAvgTemp = () => {\r\n  return useQuery(\r\n    \"Msg_Downtime_Alerts_WeeklyAvgTemp\",\r\n    fetchTotalsAndWeeklyAvgTemp\r\n  );\r\n};\r\n\r\nexport const GetDailyChartData = () => {\r\n  return useQuery(\"Daily_temprature_chart\", fetchDailyChartData);\r\n};\r\n\r\nexport const GetSystemLogData = () => {\r\n  return useQuery(\"System_log_data\", fetchSystemLogData);\r\n};\r\n\r\nexport const GetActivityData = () => {\r\n  return useQuery(\"Activity_Data\", fetchActivityData);\r\n};\r\n","import {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport { GetDailyChartData } from \"../../../hook/SensorDetailsAPIservices\";\r\nfunction TempratureDailyLineChart() {\r\n  const { isLoading, isError, data, error } = GetDailyChartData();\r\n  // ---------- Handling Loading and Errors -----------------\r\n  if (isLoading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  if (isError) {\r\n    return (\r\n      <span>\r\n        {error instanceof Error ? <h2>{error.message}</h2> : \"Unexpected error\"}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const APIData = data?.data.records;\r\n  console.log(APIData);\r\n\r\n  return (\r\n    <div className=\"col-md-12 col-sm-12 col-xs-12 m-t-20 border-double\">\r\n      <div className=\"row m-t-20\">\r\n        <h5 className=\"\">\r\n          TEMPERATURE DAILY{\" \"}\r\n          <small>( Note: this chart api has one device )</small>\r\n        </h5>\r\n        <div className=\"col-lg-12 m-t-10\">\r\n          <div className=\"row\">\r\n            <ResponsiveContainer width=\"100%\" aspect={4 / 1} minHeight=\"70%\">\r\n              <LineChart\r\n                width={500}\r\n                height={300}\r\n                data={APIData}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5\r\n                }}\r\n              >\r\n                <CartesianGrid\r\n                  borderWidth={1}\r\n                  horizontal={true}\r\n                  vertical={false}\r\n                  horizontalPoints={[40, 80, 120, 160, 200]}\r\n                />\r\n                <XAxis hide={true} />\r\n                <YAxis hide={true} />\r\n\r\n                {/* <Tooltip /> */}\r\n                <Legend iconType=\"square\" />\r\n                <Line type=\"monotone\" dataKey=\"Sensor1\" stroke=\"#8884d8\" />\r\n                <Line type=\"monotone\" dataKey=\"temp\" stroke=\"#82ca9d\" />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TempratureDailyLineChart;\r\n","import \"./weeklyChartStyle.css\";\r\nimport React from \"react\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Monday\",\r\n    time: 4000,\r\n    temp: 2400\r\n  },\r\n  {\r\n    name: \"Tue\",\r\n    time: 3000,\r\n    temp: 1398\r\n  },\r\n  {\r\n    name: \"Wed\",\r\n    time: 2000,\r\n    temp: 9800\r\n  },\r\n  {\r\n    name: \"Thu\",\r\n    time: 2780,\r\n    temp: 3908\r\n  },\r\n  {\r\n    name: \"Fri\",\r\n    time: 1890,\r\n    temp: 4800\r\n  },\r\n  {\r\n    name: \"Sat\",\r\n    time: 2390,\r\n    temp: 3800\r\n  },\r\n  {\r\n    name: \"Sun\",\r\n    time: 3490,\r\n    temp: 4300\r\n  }\r\n];\r\n\r\nconst WeeklyAvgTemChart = () => {\r\n  return (\r\n    <div className=\"col-md-6 col-sm-12 col-xs-12 border\">\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <AreaChart\r\n          width={500}\r\n          height={400}\r\n          data={data}\r\n          margin={{\r\n            top: 10,\r\n            right: 30,\r\n            left: 0,\r\n            bottom: 0\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis hide={true} />\r\n          <Tooltip />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"time\"\r\n            stroke=\"#8884d8\"\r\n            fill=\"#8884d8\"\r\n          />\r\n          <Area type=\"monotone\" dataKey=\"temp\" stroke=\"#8884d8\" fill=\"#ddd\" />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\nexport default WeeklyAvgTemChart;\r\n","import \"./systemLogStyle.css\";\r\nimport { GetSystemLogData } from \"../../../hook/SensorDetailsAPIservices\";\r\nimport { logTypes } from \"../../../types/Types\";\r\nimport moment from \"moment\";\r\n\r\nconst SystemLog = () => {\r\n  const { isLoading, data: logData, isError, error } = GetSystemLogData();\r\n\r\n\r\n  // --- Handling Loading and Errors ---\r\n  if (isLoading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  if (isError) {\r\n    return (\r\n      <span>\r\n        {error instanceof Error ? <h2>{error.message}</h2> : \"Unexpected error\"}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* ----- Left side (System Log) -------- */}\r\n      <div className=\"col-md-6 col-sm-12 col-xs-12 \">\r\n        <h6>SYSTEM LOG</h6>\r\n        <div className=\"col-md-12\">\r\n          {/* <!-- Recent Activity --> */}\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"activity\">\r\n                {\r\n                  logData?.data.records.map(({time, description}: logTypes) => {\r\n                    return (\r\n                      <div key={time} className=\"activity-item d-flex\">\r\n                        <div className=\"activite-label\"></div>\r\n                        <i className=\"bi bi-circle-fill activity-badge text-muted align-self-start\" />\r\n                        <div className=\"activity-content\">\r\n                          {description.substring(1,20) + \"...\"}\r\n                          <span className=\"dateOrTime\">\r\n                          {moment(Number(time)).startOf('hour').fromNow()}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n                {/*  activity item*/}\r\n                <div className=\"activity-item d-flex\">\r\n                  <div className=\"activite-label\"></div>\r\n                  <i className=\"bi bi-circle activity-badge text-muted align-self-start\" />\r\n                  <div className=\"activity-content\">view all</div>\r\n                </div>\r\n                {/* End activity item*/}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* End Recent Activity */}\r\n        </div>\r\n      </div>\r\n      {/* ----- End of Left side (System Log)  -------- */}\r\n    </>\r\n  );\r\n};\r\nexport default SystemLog;\r\n","import \"./activitiesStyle.css\";\r\nimport { GetActivityData } from \"../../../hook/SensorDetailsAPIservices\";\r\nimport { ActivityType } from \"../../../types/Types\";\r\nimport moment from \"moment\";\r\nconst Activities = () => {\r\n  const { isLoading, data, isError, error } = GetActivityData();\r\n\r\n  // --- Handling Loading and Errors ---\r\n  if (isLoading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  if (isError) {\r\n    return (\r\n      <span>\r\n        {error instanceof Error ? <h2>{error.message}</h2> : \"Unexpected error\"}\r\n      </span>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"col-md-6 col-sm-12 col-xs-12\">\r\n      <h6>Activity</h6>\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            {\r\n                data?.data.records.map(({time, description, event_name}: ActivityType) => {\r\n                    return (\r\n                        <div key={time} className=\"activitiesWrapper\">\r\n                        <div className=\"deviceItem \">\r\n                          <i className=\"bi bi-person-circle\" />\r\n                          <span className=\"deviceformation\">\r\n                            <div className=\"deviceStatus\">{event_name}</div>\r\n                            <div className=\"onlineOfflineStatus\">{moment(Number(time)).startOf('hour').fromNow()}</div>\r\n                          </span>\r\n                        </div>\r\n                        <p className=\"activityText\">{description}</p>\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Activities;\r\n","interface totalReportsPageType {\r\n  title?: string;\r\n  text?: string;\r\n  amount?: number;\r\n  type?: string;\r\n}\r\nconst TotalReports = ({ title, text, amount, type }: totalReportsPageType) => {\r\n  return (\r\n    <div className=\"row border\">\r\n      <div className=\"totalMessageWrapper\">\r\n        <div className=\"totalMessage\">\r\n          <h6>{title}</h6>\r\n          <small>{text}</small>\r\n        </div>\r\n        <span className=\"totalDownTime\">\r\n          <h4>{amount}</h4>\r\n          <small>{type}</small>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TotalReports;\r\n","import { Link, useParams } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\nimport \"./sensorDetails.css\";\r\nimport MainContainer from \"../../../components/container/MainContainer\";\r\nimport { useTotalsAndWeeklyAvgTemp } from \"../../../hook/SensorDetailsAPIservices\";\r\nimport TempratureDailyLineChart from \"../../charts/dailyTempChart/TempratureDailyLineChart\";\r\nimport WeeklyAvgTemChart from \"../../charts/weeklyAvgChart/Weekly_avg_tem_chart\";\r\nimport SystemLog from \"../systemLog/SystemLog\";\r\nimport Activities from \"../activity/Activities\";\r\nimport TotalReports from \"../totalReports/TotalReports\";\r\n// import SensorsChart from \"../../charts/sensorChart/SensorsChart\";\r\nconst SensorDetailsPage = () => {\r\n  const { device_id } = useParams();\r\n\r\n  const { isLoading, data, isError, error } = useTotalsAndWeeklyAvgTemp();\r\n\r\n  // ---------- Handling Loading and Errors -----------------\r\n  if (isLoading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  if (isError) {\r\n    return (\r\n      <span>\r\n        {error instanceof Error ? <h2>{error.message}</h2> : \"Unexpected error\"}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* ------------- Main Content  -------------- */}\r\n      <main id=\"main\" className=\"main\">\r\n        <MainContainer className=\"sensorDetails\">\r\n          {/* --------------- Weekly Average ------------- */}\r\n          <h5 className=\"card-title\">\r\n            <Link to=\"/\">\r\n              <span className=\"backButton\">\r\n                <i className=\"bi bi-arrow-left\"></i>\r\n              </span>\r\n            </Link>\r\n            Sensor - {device_id}\r\n          </h5>\r\n\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"row\">\r\n              {/* ----- Left side -------- */}\r\n              <div className=\"col-md-6 col-sm-12 col-xs-12\">\r\n                {/* --- TOTAL MESSAGES ---  */}\r\n                <TotalReports\r\n                  title=\"TOTAL MESSAGES\"\r\n                  text=\"Total Messages this week\"\r\n                  amount={120}\r\n                />\r\n                {/*  --- End of TOTAL MESSAGES --- */}\r\n\r\n                {/* --- DownTime ---  */}\r\n                <TotalReports\r\n                  title=\"DOWN TIME\"\r\n                  text=\"Total down time\"\r\n                  amount={67}\r\n                  type=\"sec\"\r\n                />\r\n                {/*  --- End of DownTime --- */}\r\n\r\n                {/* --- Alerts ---  */}\r\n                <TotalReports\r\n                  title=\"ALERTS\"\r\n                  text=\"System Alerts this week\"\r\n                  amount={74}\r\n                />\r\n                {/*  --- End of Alerts --- */}\r\n              </div>\r\n              {/* ----- End of Left side -------- */}\r\n\r\n              {/* ----- Right side -------- */}\r\n              <WeeklyAvgTemChart />\r\n              {/* ----- End of Right side -------- */}\r\n            </div>\r\n          </div>\r\n          {/* --- End of Weekly Average --- */}\r\n\r\n          {/* --- Temperature Daily Graph --- */}\r\n          <TempratureDailyLineChart />\r\n          {/* --- End of Temperature Daily Graph --- */}\r\n\r\n          {/* --- System Log and Activies --- */}\r\n          <div className=\"col-lg-12 m-t-40\">\r\n            <div className=\"activityWrapper\">\r\n              <div className=\"row\">\r\n                <SystemLog />\r\n                <Activities />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* ---- End of System Log and Activies --- */}\r\n        </MainContainer>\r\n      </main>\r\n      {/* ----------- End of Main Content ---------- */}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default SensorDetailsPage;\r\n","import axios from \"axios\";\r\nconst baseURL = process.env.REACT_APP_BACKEDN_URL;\r\n// console.log(\"Base URL =\", baseURL);\r\nconst axiosInstance = axios.create({\r\n  baseURL: baseURL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n});\r\n\r\nexport default axiosInstance;\r\n"],"names":["className","children","styleAsProps","style","fetchTotalsAndWeeklyAvgTemp","axiosInstance","response","message","fetchDailyChartData","fetchSystemLogData","fetchActivityData","useQuery","isLoading","isError","data","error","Error","APIData","records","console","log","ResponsiveContainer","width","aspect","minHeight","LineChart","height","margin","top","right","left","bottom","CartesianGrid","borderWidth","horizontal","vertical","horizontalPoints","XAxis","hide","YAxis","Legend","iconType","Line","type","dataKey","stroke","name","time","temp","AreaChart","strokeDasharray","Tooltip","Area","fill","logData","map","description","substring","moment","Number","startOf","fromNow","event_name","title","text","amount","device_id","useParams","Fragment","id","MainContainer","to","axios","baseURL","process","headers"],"sourceRoot":""}